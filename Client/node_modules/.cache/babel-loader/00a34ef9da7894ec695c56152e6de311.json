{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\OneDrive\\\\Documents\\\\Projects\\\\tudorflix\\\\Client\\\\src\\\\Components\\\\Settings.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './Settings.css';\nimport UserImage from '../img/User-Profile.png';\nimport EditSVG from \"../SVG/Edit-Solid.svg\";\nimport ArrowSVG from \"../SVG/Arrow-Solid.svg\";\nimport DramaSVG from \"../SVG/Drama-Solid.svg\";\nimport AdventureSVG from \"../SVG/Adventure-Solid.svg\";\nimport ComedySVG from \"../SVG/Comedy-Solid.svg\";\nimport HorrorSVG from \"../SVG/Horror-Solid.svg\";\nimport SciFiSVG from \"../SVG/SciFi-Solid.svg\";\nimport ActionSVG from \"../SVG/Action-Solid.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.userBlurField = index => {\n      var currentStates = this.state.readOnlyStates;\n      var currentInputStates = this.state.InputStates;\n      currentStates[index] = true;\n      currentInputStates[index] = 0;\n      this.setState({\n        readOnlyStates: currentStates,\n        InputStates: currentInputStates\n      });\n    };\n\n    this.userClickEdit = index => {\n      var currentStates = this.state.readOnlyStates;\n      var currentInputStates = this.state.InputStates;\n\n      if (currentInputStates[index] === 0) {\n        currentInputStates[index] = 1;\n      } else {\n        currentInputStates[index] = 0;\n      }\n\n      if (currentStates[index] === true) {\n        currentStates[index] = false;\n      } else {\n        currentStates[index] = true; //user finished with editing\n      }\n\n      this.setState({\n        readOnlyStates: currentStates,\n        InputStates: currentInputStates\n      });\n    };\n\n    this.userSubmitSurvey = () => {\n      if (this.state.currentSelectedGenres.length >= 1) {\n        var genresToMap = [];\n        console.log(this.state.currentSelectedGenres);\n\n        for (var i = 0; i < this.state.currentSelectedGenres.length; i++) {\n          for (var x = 0; x < this.state.genreMap.genres.length; x++) {\n            if (this.state.genreMap.genres[x].id === this.state.currentSelectedGenres[i]) {\n              genresToMap.push(this.state.genreMap.genres[x].name);\n            }\n          }\n        }\n\n        console.log(genresToMap);\n        this.setState({\n          genreSelectState: 0,\n          mainSettingsState: 0,\n          gennresMapped: genresToMap\n        });\n      }\n    };\n\n    this.userEditGenres = () => {\n      this.setState({\n        InfoState: 0,\n        genreSelectState: 1,\n        mainSettingsState: 1\n      });\n    };\n\n    this.validateEmail = email => {\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // eslint-disable-line\n\n      return re.test(email);\n    };\n\n    this.userSave = () => {\n      var previousUser = this.state.currentUser;\n      var currentUser = this.state.currentUser;\n      currentUser.username = document.getElementsByClassName('userSettingsProfileName')[0].value;\n\n      if (currentUser.username.length < 3) {\n        this.setState({\n          InfoState: 1,\n          InfoTitle: 'Error',\n          InfoMessage: 'Please Set A Username longer than 3 characters'\n        });\n        return;\n      }\n\n      currentUser.includeadult = document.getElementById('userIncludeAdultBox').checked;\n      currentUser.email = document.getElementsByClassName('settingsValueInput')[0].value;\n\n      if (!this.validateEmail(currentUser.email)) {\n        this.setState({\n          InfoState: 1,\n          InfoTitle: 'Error',\n          InfoMessage: 'Please Enter a valid Email adress'\n        });\n        return;\n      }\n\n      currentUser.genres = this.state.currentSelectedGenres;\n\n      if (currentUser === previousUser) {\n        return;\n      } else this.setState({\n        currentUser: currentUser\n      });\n\n      this.sendUserSavedata(currentUser);\n    };\n\n    this.state = {\n      genreMap: {\n        \"genres\": [{\n          \"id\": 28,\n          \"name\": \"Action\"\n        }, {\n          \"id\": 12,\n          \"name\": \"Adventure\"\n        }, {\n          \"id\": 16,\n          \"name\": \"Animation\"\n        }, {\n          \"id\": 35,\n          \"name\": \"Comedy\"\n        }, {\n          \"id\": 80,\n          \"name\": \"Crime\"\n        }, {\n          \"id\": 99,\n          \"name\": \"Documentary\"\n        }, {\n          \"id\": 18,\n          \"name\": \"Drama\"\n        }, {\n          \"id\": 10751,\n          \"name\": \"Family\"\n        }, {\n          \"id\": 14,\n          \"name\": \"Fantasy\"\n        }, {\n          \"id\": 36,\n          \"name\": \"History\"\n        }, {\n          \"id\": 27,\n          \"name\": \"Horror\"\n        }, {\n          \"id\": 10402,\n          \"name\": \"Music\"\n        }, {\n          \"id\": 9648,\n          \"name\": \"Mystery\"\n        }, {\n          \"id\": 10749,\n          \"name\": \"Romance\"\n        }, {\n          \"id\": 878,\n          \"name\": \"Science Fiction\"\n        }, {\n          \"id\": 10770,\n          \"name\": \"TV Movie\"\n        }, {\n          \"id\": 53,\n          \"name\": \"Thriller\"\n        }, {\n          \"id\": 10752,\n          \"name\": \"War\"\n        }, {\n          \"id\": 37,\n          \"name\": \"Western\"\n        }]\n      },\n      surveyGenreIndex: [{\n        'id': 18\n      }, {\n        'id': 28\n      }, {\n        'id': 12\n      }, {\n        'id': 35\n      }, {\n        'id': 27\n      }, {\n        'id': 878\n      }],\n      currentUser: this.props.user,\n      gennresMapped: [],\n      readOnlyStates: [true, true, true],\n      genreClasses: [],\n      currentSelectedGenres: [],\n      genreSelectClass: ['surveyContainerSettingsHide', 'surveyContainerSettingsHide surveyContainerSettingsShow'],\n      genreSelectState: 0,\n      mainSettingsClass: ['mainSettingsContainer', 'mainSettingsContainer mainSettingsContainerHide'],\n      buttonSaveClass: ['saveBtn', 'saveBtn saveBtnHide'],\n      mainSettingsState: 0,\n      InputClasses: ['settingsValue settingsValueInput', 'settingsValue settingsValueInput InputEdit'],\n      UsernameInputClasses: ['userSettingsProfileName', 'userSettingsProfileName userSettingsProfileNameEdit'],\n      InputStates: [0, 0],\n      InfoClass: ['InfoContainer', 'InfoContainer errorContainer', 'InfoContainer successContainer'],\n      InfoState: 0,\n      InfoTitle: '',\n      InfoMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    var genresToMap = [];\n    console.log(this.state.surveyGenreIndex[0]);\n    var genreStyleClassesToAdd = [];\n    var currentGenreArray = this.state.currentSelectedGenres;\n\n    for (var x = 0; x < 6; x++) {\n      genreStyleClassesToAdd.push('genreContainer');\n    }\n\n    for (var i = 0; i < this.props.user.genres.length; i++) {\n      for (x = 0; x < this.state.genreMap.genres.length; x++) {\n        if (this.state.genreMap.genres[x].id === this.props.user.genres[i]) {\n          genresToMap.push(this.state.genreMap.genres[x].name);\n        }\n      }\n\n      for (var j = 0; j < this.state.surveyGenreIndex.length; j++) {\n        if (this.props.user.genres[i] === this.state.surveyGenreIndex[j].id) {\n          genreStyleClassesToAdd[j] = 'genreContainer genreSelected';\n          currentGenreArray.push(this.state.surveyGenreIndex[j].id);\n        }\n      }\n    }\n\n    console.log(currentGenreArray);\n    document.getElementsByClassName('userSettingsProfileName')[0].value = this.props.user.username;\n    document.getElementById('userIncludeAdultBox').checked = this.props.user.includeadult;\n    document.getElementsByClassName('settingsValueInput')[0].value = this.props.user.email;\n    this.setState({\n      gennresMapped: genresToMap,\n      genreClasses: genreStyleClassesToAdd,\n      currentSelectedGenres: currentGenreArray\n    });\n  }\n\n  handleGenreClick(index, genreNum) {\n    if (this.state.currentSelectedGenres.length < 3 && !this.state.currentSelectedGenres.includes(genreNum)) {\n      var currentStyleArray = this.state.genreClasses;\n      var currentGenreArray = this.state.currentSelectedGenres;\n      currentGenreArray.push(genreNum);\n      currentStyleArray[index] = 'genreContainer genreSelected';\n      this.setState({\n        genreClasses: currentStyleArray,\n        currentSelectedGenres: currentGenreArray\n      });\n    } else if (this.state.currentSelectedGenres.includes(genreNum)) {\n      //user selected the genre already\n      currentStyleArray = this.state.genreClasses;\n      currentStyleArray[index] = 'genreContainer';\n      currentGenreArray = this.state.currentSelectedGenres;\n      currentGenreArray = currentGenreArray.filter(item => item !== genreNum);\n      this.setState({\n        genreClasses: currentStyleArray,\n        currentSelectedGenres: currentGenreArray\n      });\n    }\n  }\n\n  async sendUserSavedata(saveData) {\n    await axios.post(this.props.routes.update, {\n      saveData\n    }).then(res => {\n      if (res.data.status === 'success') {\n        //success updating\n        localStorage.removeItem('username');\n        localStorage.setItem('username', JSON.stringify(res.data.message));\n        this.setState({\n          InfoState: 2,\n          InfoTitle: 'Success',\n          InfoMessage: 'Successfully updated account settings'\n        });\n      } else {//failure updating\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"SettingsTab\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"titleContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"accountSettingsTitle\",\n          children: \"Account Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.InfoClass[this.state.InfoState],\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"errorTitle\",\n          children: this.state.InfoTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.InfoMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.mainSettingsClass[this.state.mainSettingsState],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"userProfileContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            id: \"userSettingsProfileImage\",\n            src: UserImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            readOnly: this.state.readOnlyStates[0],\n            type: \"text\",\n            onBlur: () => this.userBlurField(0),\n            className: this.state.UsernameInputClasses[this.state.InputStates[0]]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => this.userClickEdit(0),\n            className: \"userEditButton\",\n            alt: \"\",\n            src: EditSVG\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"userInfoSettingsContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settingsItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"settingsTitle\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onBlur: () => this.userBlurField(1),\n              readOnly: this.state.readOnlyStates[1],\n              className: this.state.InputClasses[this.state.InputStates[1]]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => this.userClickEdit(1),\n              className: \"userEditButton mainEdit\",\n              alt: \"\",\n              src: EditSVG\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settingsItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"settingsTitle\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"settingsValue\",\n              children: \".............\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settingsItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"settingsTitle\",\n              children: \"Interests:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"settingsValue\",\n              children: this.state.gennresMapped.join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => this.userEditGenres(),\n              className: \"userEditButton mainEdit\",\n              alt: \"\",\n              src: EditSVG\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settingsItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"settingsTitle\",\n              children: \"Include Adult:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: true,\n              id: \"userIncludeAdultBox\",\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => this.userSave(),\n        className: this.state.buttonSaveClass[this.state.mainSettingsState],\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.genreSelectClass[this.state.genreSelectState],\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"surveyTitle\",\n          children: \"What Are Your Favourite Genres? (Select Up To 3)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"surveyFavouritesContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleGenreClick(0, 18),\n            className: this.state.genreClasses[0],\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"genreImage\",\n              src: DramaSVG,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genreName\",\n              children: \"Drama\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleGenreClick(1, 28),\n            className: this.state.genreClasses[1],\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"genreImage\",\n              src: ActionSVG,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genreName\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleGenreClick(2, 12),\n            className: this.state.genreClasses[2],\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"genreImage\",\n              src: AdventureSVG,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genreName\",\n              children: \"Adventure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleGenreClick(3, 35),\n            className: this.state.genreClasses[3],\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"genreImage\",\n              src: ComedySVG,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genreName\",\n              children: \"Comedy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleGenreClick(4, 27),\n            className: this.state.genreClasses[4],\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"genreImage\",\n              src: HorrorSVG,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genreName\",\n              children: \"Horror\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleGenreClick(5, 878),\n            className: this.state.genreClasses[5],\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"genreImage\",\n              src: SciFiSVG,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genreName\",\n              children: \"Science Fiction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: this.userSubmitSurvey,\n          id: \"surveyButtonContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"loginButton\",\n            src: ArrowSVG,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Settings;","map":{"version":3,"sources":["C:/Users/willi/OneDrive/Documents/Projects/tudorflix/Client/src/Components/Settings.js"],"names":["React","Component","axios","UserImage","Settings","constructor","props","userBlurField","index","currentStates","state","readOnlyStates","currentInputStates","InputStates","setState","userClickEdit","userSubmitSurvey","currentSelectedGenres","length","genresToMap","console","log","i","x","genreMap","genres","id","push","name","genreSelectState","mainSettingsState","gennresMapped","userEditGenres","InfoState","validateEmail","email","re","test","userSave","previousUser","currentUser","username","document","getElementsByClassName","value","InfoTitle","InfoMessage","includeadult","getElementById","checked","sendUserSavedata","surveyGenreIndex","user","genreClasses","genreSelectClass","mainSettingsClass","buttonSaveClass","InputClasses","UsernameInputClasses","InfoClass","componentDidMount","genreStyleClassesToAdd","currentGenreArray","j","handleGenreClick","genreNum","includes","currentStyleArray","filter","item","saveData","post","routes","update","then","res","data","status","localStorage","removeItem","setItem","JSON","stringify","message","render","EditSVG","join","DramaSVG","ActionSVG","AdventureSVG","ComedySVG","HorrorSVG","SciFiSVG","ArrowSVG"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './Settings.css';\r\n\r\nimport UserImage from '../img/User-Profile.png';\r\nimport EditSVG from '../SVG/Edit-Solid.svg';\r\nimport ArrowSVG from '../SVG/Arrow-Solid.svg';\r\nimport DramaSVG from '../SVG/Drama-Solid.svg';\r\nimport AdventureSVG from '../SVG/Adventure-Solid.svg';\r\nimport ComedySVG from '../SVG/Comedy-Solid.svg';\r\nimport HorrorSVG from '../SVG/Horror-Solid.svg';\r\nimport SciFiSVG from '../SVG/SciFi-Solid.svg';\r\nimport ActionSVG from '../SVG/Action-Solid.svg';\r\n\r\nclass Settings extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            genreMap: {\"genres\": [\r\n                {\r\n                  \"id\": 28,\r\n                  \"name\": \"Action\"\r\n                },\r\n                {\r\n                  \"id\": 12,\r\n                  \"name\": \"Adventure\"\r\n                },\r\n                {\r\n                  \"id\": 16,\r\n                  \"name\": \"Animation\"\r\n                },\r\n                {\r\n                  \"id\": 35,\r\n                  \"name\": \"Comedy\"\r\n                },\r\n                {\r\n                  \"id\": 80,\r\n                  \"name\": \"Crime\"\r\n                },\r\n                {\r\n                  \"id\": 99,\r\n                  \"name\": \"Documentary\"\r\n                },\r\n                {\r\n                  \"id\": 18,\r\n                  \"name\": \"Drama\"\r\n                },\r\n                {\r\n                  \"id\": 10751,\r\n                  \"name\": \"Family\"\r\n                },\r\n                {\r\n                  \"id\": 14,\r\n                  \"name\": \"Fantasy\"\r\n                },\r\n                {\r\n                  \"id\": 36,\r\n                  \"name\": \"History\"\r\n                },\r\n                {\r\n                  \"id\": 27,\r\n                  \"name\": \"Horror\"\r\n                },\r\n                {\r\n                  \"id\": 10402,\r\n                  \"name\": \"Music\"\r\n                },\r\n                {\r\n                  \"id\": 9648,\r\n                  \"name\": \"Mystery\"\r\n                },\r\n                {\r\n                  \"id\": 10749,\r\n                  \"name\": \"Romance\"\r\n                },\r\n                {\r\n                  \"id\": 878,\r\n                  \"name\": \"Science Fiction\"\r\n                },\r\n                {\r\n                  \"id\": 10770,\r\n                  \"name\": \"TV Movie\"\r\n                },\r\n                {\r\n                  \"id\": 53,\r\n                  \"name\": \"Thriller\"\r\n                },\r\n                {\r\n                  \"id\": 10752,\r\n                  \"name\": \"War\"\r\n                },\r\n                {\r\n                  \"id\": 37,\r\n                  \"name\": \"Western\"\r\n                }\r\n              ]\r\n            },\r\n            surveyGenreIndex: [\r\n                {'id': 18}, {'id': 28}, {'id': 12}, {'id': 35}, {'id': 27}, {'id': 878}\r\n            ],\r\n            currentUser: this.props.user,\r\n            gennresMapped: [],\r\n            readOnlyStates: [true, true, true],\r\n            genreClasses: [],\r\n            currentSelectedGenres: [],\r\n            genreSelectClass: ['surveyContainerSettingsHide', 'surveyContainerSettingsHide surveyContainerSettingsShow'],\r\n            genreSelectState: 0,\r\n            mainSettingsClass: ['mainSettingsContainer', 'mainSettingsContainer mainSettingsContainerHide'],\r\n            buttonSaveClass: ['saveBtn', 'saveBtn saveBtnHide'],\r\n            mainSettingsState: 0,\r\n            InputClasses: ['settingsValue settingsValueInput', 'settingsValue settingsValueInput InputEdit'],\r\n            UsernameInputClasses: ['userSettingsProfileName', 'userSettingsProfileName userSettingsProfileNameEdit'],\r\n            InputStates: [0, 0],\r\n            InfoClass: ['InfoContainer', 'InfoContainer errorContainer', 'InfoContainer successContainer'],\r\n            InfoState: 0,\r\n            InfoTitle: '',\r\n            InfoMessage: '',\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        var genresToMap = [];\r\n        console.log(this.state.surveyGenreIndex[0]);\r\n        var genreStyleClassesToAdd = []\r\n        var currentGenreArray = this.state.currentSelectedGenres;\r\n        for (var x = 0; x < 6; x++){\r\n            genreStyleClassesToAdd.push('genreContainer');\r\n        }\r\n        for(var i = 0; i < this.props.user.genres.length; i++){\r\n            for(x = 0; x < this.state.genreMap.genres.length; x++){\r\n                if(this.state.genreMap.genres[x].id === this.props.user.genres[i]){\r\n                    genresToMap.push(this.state.genreMap.genres[x].name);\r\n                }\r\n            }\r\n            for(var j = 0; j < this.state.surveyGenreIndex.length; j++){\r\n                if(this.props.user.genres[i] === this.state.surveyGenreIndex[j].id){\r\n                    genreStyleClassesToAdd[j] = 'genreContainer genreSelected';\r\n                    currentGenreArray.push(this.state.surveyGenreIndex[j].id);\r\n                }\r\n            }\r\n        }\r\n        console.log(currentGenreArray);\r\n        document.getElementsByClassName('userSettingsProfileName')[0].value = this.props.user.username;\r\n        document.getElementById('userIncludeAdultBox').checked = this.props.user.includeadult;\r\n        document.getElementsByClassName('settingsValueInput')[0].value = this.props.user.email;\r\n        this.setState({gennresMapped: genresToMap, genreClasses: genreStyleClassesToAdd, currentSelectedGenres: currentGenreArray});\r\n    }\r\n\r\n    handleGenreClick(index, genreNum){\r\n        if(this.state.currentSelectedGenres.length < 3 && !this.state.currentSelectedGenres.includes(genreNum)){\r\n            var currentStyleArray = this.state.genreClasses;\r\n            var currentGenreArray = this.state.currentSelectedGenres;\r\n            currentGenreArray.push(genreNum);\r\n            currentStyleArray[index] = 'genreContainer genreSelected';\r\n            this.setState({genreClasses: currentStyleArray, currentSelectedGenres: currentGenreArray});\r\n        }else if(this.state.currentSelectedGenres.includes(genreNum)){ //user selected the genre already\r\n            currentStyleArray = this.state.genreClasses;\r\n            currentStyleArray[index] = 'genreContainer';\r\n            currentGenreArray = this.state.currentSelectedGenres;\r\n            currentGenreArray = currentGenreArray.filter(item => item !== genreNum);\r\n            this.setState({genreClasses: currentStyleArray, currentSelectedGenres: currentGenreArray});\r\n        }\r\n    }\r\n\r\n    userBlurField = (index) => {\r\n        var currentStates = this.state.readOnlyStates;\r\n        var currentInputStates = this.state.InputStates;\r\n        currentStates[index] = true;\r\n        currentInputStates[index] = 0;\r\n        this.setState({readOnlyStates: currentStates, InputStates: currentInputStates});\r\n    }\r\n\r\n    userClickEdit = (index) =>{\r\n        var currentStates = this.state.readOnlyStates;\r\n        var currentInputStates = this.state.InputStates;\r\n        if(currentInputStates[index] === 0){\r\n            currentInputStates[index] = 1;\r\n        }else{\r\n            currentInputStates[index] = 0;\r\n        }\r\n        if(currentStates[index] === true){\r\n            currentStates[index] = false;\r\n        }else{\r\n            currentStates[index] = true; //user finished with editing\r\n        }\r\n        this.setState({readOnlyStates: currentStates, InputStates: currentInputStates});\r\n    }\r\n    userSubmitSurvey = () =>{\r\n        if(this.state.currentSelectedGenres.length >= 1){\r\n            var genresToMap = [];\r\n            console.log(this.state.currentSelectedGenres);\r\n            for(var i = 0; i < this.state.currentSelectedGenres.length; i++){\r\n                for(var x = 0; x < this.state.genreMap.genres.length; x++){\r\n                    if(this.state.genreMap.genres[x].id === this.state.currentSelectedGenres[i]){\r\n                        genresToMap.push(this.state.genreMap.genres[x].name);\r\n                    }\r\n                }\r\n            }\r\n            console.log(genresToMap);\r\n            this.setState({genreSelectState: 0, mainSettingsState: 0, gennresMapped: genresToMap});\r\n        }\r\n\r\n    }\r\n\r\n    userEditGenres = () =>{\r\n        this.setState({InfoState: 0,genreSelectState: 1, mainSettingsState: 1});\r\n    }\r\n\r\n    async sendUserSavedata(saveData){\r\n        await axios.post(this.props.routes.update, {saveData})\r\n            .then(res => {\r\n                if(res.data.status === 'success'){ //success updating\r\n                    localStorage.removeItem('username');\r\n                    localStorage.setItem('username', JSON.stringify(res.data.message));\r\n                    this.setState({InfoState: 2, InfoTitle: 'Success', InfoMessage: 'Successfully updated account settings'});\r\n                }else{ //failure updating\r\n                    \r\n                }\r\n            })\r\n    }\r\n\r\n    validateEmail = (email) => {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // eslint-disable-line\r\n        return re.test(email);\r\n    }\r\n\r\n    userSave = () =>{\r\n        var previousUser = this.state.currentUser;\r\n        var currentUser = this.state.currentUser;\r\n        currentUser.username = document.getElementsByClassName('userSettingsProfileName')[0].value;\r\n        if(currentUser.username.length < 3){\r\n            this.setState({InfoState: 1, InfoTitle: 'Error', InfoMessage: 'Please Set A Username longer than 3 characters'});\r\n            return;\r\n        }\r\n        currentUser.includeadult = document.getElementById('userIncludeAdultBox').checked;\r\n        currentUser.email = document.getElementsByClassName('settingsValueInput')[0].value;\r\n        if(!this.validateEmail(currentUser.email)){\r\n            this.setState({InfoState: 1, InfoTitle: 'Error', InfoMessage: 'Please Enter a valid Email adress'});\r\n            return;\r\n        }\r\n        currentUser.genres = this.state.currentSelectedGenres;\r\n        if(currentUser === previousUser){\r\n            return;\r\n        }else\r\n        this.setState({currentUser: currentUser});\r\n        this.sendUserSavedata(currentUser)\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div id='SettingsTab'>\r\n                <div id='titleContainer'>\r\n                    <p id='accountSettingsTitle'>Account Settings</p>\r\n                </div>\r\n                <div className={this.state.InfoClass[this.state.InfoState]}>\r\n                        <p id='errorTitle'>{this.state.InfoTitle}</p>\r\n                        <p>{this.state.InfoMessage}</p>\r\n                </div>\r\n                <div className={this.state.mainSettingsClass[this.state.mainSettingsState]}>\r\n                    <div id='userProfileContainer'>\r\n                        <img alt='' id='userSettingsProfileImage' src={UserImage}></img>\r\n                        <input readOnly={this.state.readOnlyStates[0]} type='text' onBlur={() => this.userBlurField(0)} className={this.state.UsernameInputClasses[this.state.InputStates[0]]}></input>\r\n                        <img onClick={() => this.userClickEdit(0)} className='userEditButton' alt='' src={EditSVG}></img>\r\n                    </div>\r\n                    <div id='userInfoSettingsContainer'>\r\n                        <div className='settingsItem'>\r\n                            <p className='settingsTitle'>Email:</p>\r\n                            <input onBlur={() => this.userBlurField(1)} readOnly={this.state.readOnlyStates[1]} className={this.state.InputClasses[this.state.InputStates[1]]}></input>\r\n                            <img onClick={() => this.userClickEdit(1)} className='userEditButton mainEdit' alt='' src={EditSVG}></img>\r\n                        </div>\r\n                        <div className='settingsItem'>\r\n                            <p className='settingsTitle'>Password:</p>\r\n                            <p className='settingsValue'>.............</p>\r\n                        </div>\r\n                        <div className='settingsItem'>\r\n                            <p className='settingsTitle'>Interests:</p>\r\n                            <p className='settingsValue'>{this.state.gennresMapped.join(', ')}</p>\r\n                            <img onClick={() => this.userEditGenres()} className='userEditButton mainEdit' alt='' src={EditSVG}></img>\r\n                        </div>\r\n                        <div className='settingsItem'>\r\n                            <p className='settingsTitle'>Include Adult:</p>\r\n                            <input value={true} id='userIncludeAdultBox' type='checkbox'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div onClick={() => this.userSave()} className={this.state.buttonSaveClass[this.state.mainSettingsState]}>\r\n                <p>Save</p>\r\n            </div>\r\n            <div className={this.state.genreSelectClass[this.state.genreSelectState]}>\r\n                <p id='surveyTitle'>What Are Your Favourite Genres? (Select Up To 3)</p>\r\n                <div className='surveyFavouritesContainer'>\r\n                    <div onClick={() => this.handleGenreClick(0, 18)} className={this.state.genreClasses[0]}>\r\n                        <img className='genreImage' src={DramaSVG} alt=''></img>\r\n                        <p className='genreName'>Drama</p>\r\n                    </div>\r\n                    <div onClick={() => this.handleGenreClick(1, 28)} className={this.state.genreClasses[1]}>\r\n                        <img className='genreImage' src={ActionSVG} alt=''></img>\r\n                        <p className='genreName'>Action</p>\r\n                    </div>\r\n                    <div onClick={() => this.handleGenreClick(2, 12)} className={this.state.genreClasses[2]}>\r\n                        <img className='genreImage' src={AdventureSVG} alt=''></img>\r\n                        <p className='genreName'>Adventure</p>\r\n                    </div>\r\n                    <div onClick={() => this.handleGenreClick(3, 35)} className={this.state.genreClasses[3]}>\r\n                        <img className='genreImage' src={ComedySVG} alt=''></img>\r\n                        <p className='genreName'>Comedy</p>\r\n                    </div>\r\n                    <div onClick={() => this.handleGenreClick(4, 27)} className={this.state.genreClasses[4]}>\r\n                        <img className='genreImage' src={HorrorSVG} alt=''></img>\r\n                        <p className='genreName'>Horror</p>\r\n                    </div>\r\n                    <div onClick={() => this.handleGenreClick(5, 878)} className={this.state.genreClasses[5]}>\r\n                        <img className='genreImage' src={SciFiSVG} alt=''></img>\r\n                        <p className='genreName'>Science Fiction</p>\r\n                    </div>\r\n                </div>\r\n                <div onClick={this.userSubmitSurvey} id='surveyButtonContainer'>\r\n                    <img className='loginButton' src={ArrowSVG} alt=''></img>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Settings;"]},"metadata":{},"sourceType":"module"}
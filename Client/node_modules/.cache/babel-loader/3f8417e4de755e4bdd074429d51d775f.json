{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\OneDrive\\\\Documents\\\\Projects\\\\tudorflix\\\\Client\\\\src\\\\Register.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; //body structure css\n\nimport './App.css';\nimport './Register.css';\nimport Login from './Login';\nimport SignUp from './SignUp';\nimport ArrowSVG from \"./SVG/Arrow-Solid.svg\";\nimport DramaSVG from \"./SVG/Drama-Solid.svg\";\nimport AdventureSVG from \"./SVG/Adventure-Solid.svg\";\nimport ComedySVG from \"./SVG/Comedy-Solid.svg\";\nimport HorrorSVG from \"./SVG/Horror-Solid.svg\";\nimport SciFiSVG from \"./SVG/SciFi-Solid.svg\";\nimport ActionSVG from \"./SVG/Action-Solid.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormInput = event => {\n      if (event.key === 'Enter') {\n        this.userSubmitInfo();\n      }\n    };\n\n    this.UserChangeSignType = type => {\n      document.getElementsByClassName('userInputBox')[0].value = '';\n      document.getElementsByClassName('userInputBox')[1].value = '';\n\n      if (type === 'signup') {\n        this.setState({\n          isSigningUp: true,\n          pageContentState: 1,\n          errorState: 0\n        });\n      } else if (type === 'login') {\n        this.setState({\n          isSigningUp: false,\n          pageContentState: 0,\n          errorState: 0\n        });\n      }\n    };\n\n    this.initializeSignUpSurvey = () => {\n      this.setState({\n        loginClassState: 1,\n        favouritesClassState: 1\n      });\n    };\n\n    this.userSubmitInfo = async () => {\n      //LOG IN\n      var username = document.getElementsByClassName('userInputBox')[0].value;\n      var email = document.getElementsByClassName('userInputBox')[1].value;\n      var password = document.getElementsByClassName('userInputBox')[2].value;\n      console.log(username, email, password);\n\n      if (this.state.isSigningUp === false) {\n        await axios.post(this.props.routes.signin, {\n          'username': username,\n          'password': password\n        }).then(res => {\n          if (res.data.status === 'failure') {\n            this.setState({\n              errorState: 1,\n              errorMessage: 'Username or Password is Incorrect'\n            });\n          } else if (res.data.message === 'user_successful') {\n            localStorage.setItem('username', JSON.stringify(res.data.user)); // console.log(JSON.parse((localStorage.getItem('username'))).genres);\n\n            window.location.replace(this.props.routes.home);\n          }\n        });\n      } else {\n        //SIGN UP\n        await axios.post(this.props.routes.isUser, {\n          'username': username,\n          'password': password\n        }).then(res => {\n          if (res.data.message === 'user_already_exists') {\n            this.setState({\n              errorState: 1,\n              errorMessage: 'Username already exists'\n            });\n          } else if (res.data.message === 'user_new') {\n            this.setState({\n              username: username,\n              password: password\n            });\n            this.initializeSignUpSurvey();\n          }\n        });\n      }\n    };\n\n    this.userSubmitSurvey = async () => {\n      // SUBMIT USER INFORMATION FOR SIGNINGUP\n      await axios.post(this.props.routes.signup, {\n        'username': this.state.username,\n        'password': this.state.password,\n        'genres': this.state.currentSelectedGenres\n      }).then(res => {\n        if (res.data.status === 'success') {\n          localStorage.setItem('username', JSON.stringify(res.data.user));\n          window.location.replace(this.props.routes.home);\n        }\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      errorID: ['errorSubmissionContainer', 'errorSubmissionContainer show'],\n      errorState: 0,\n      errorMessage: '',\n      isSigningUp: false,\n      pageContent: [{\n        'title': 'Log In',\n        'subtitle': 'Login To Your TudorFlix Account',\n        'topright': /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't Have An Account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => this.UserChangeSignType('signup'),\n            id: \"createAccountLink\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 130\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 104\n        }, this)\n      }, {\n        'title': 'Sign Up',\n        'subtitle': 'Create a TudorFlix Account',\n        'topright': /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already Have An Account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => this.UserChangeSignType('login'),\n            id: \"createAccountLink\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 120\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 92\n        }, this)\n      }],\n      pageContentState: 0,\n      loginClass: ['loginContainer', 'loginContainer loginContainerHide'],\n      loginClassState: 0,\n      favouritesClass: ['surveyFavouritesContainer', 'surveyFavouritesContainerShow surveyFavouritesContainer'],\n      favouritesClassState: 0,\n      genreClasses: [],\n      currentSelectedGenres: []\n    };\n    this.handleGenreClick = this.handleGenreClick.bind(this);\n  }\n\n  componentDidMount() {\n    var genreStyleClassesToAdd = [];\n\n    for (var x = 0; x < 6; x++) {\n      genreStyleClassesToAdd.push('genreContainer');\n    }\n\n    this.setState({\n      genreClasses: genreStyleClassesToAdd\n    });\n  }\n\n  handleGenreClick(index, genreNum) {\n    if (this.state.currentSelectedGenres.length < 3 && !this.state.currentSelectedGenres.includes(genreNum)) {\n      var currentStyleArray = this.state.genreClasses;\n      var currentGenreArray = this.state.currentSelectedGenres;\n      currentGenreArray.push(genreNum);\n      currentStyleArray[index] = 'genreContainer genreSelected';\n      this.setState({\n        genreClasses: currentStyleArray,\n        currentSelectedGenres: currentGenreArray\n      });\n    } else if (this.state.currentSelectedGenres.includes(genreNum)) {\n      //user selected the genre already\n      currentStyleArray = this.state.genreClasses;\n      currentStyleArray[index] = 'genreContainer';\n      currentGenreArray = this.state.currentSelectedGenres;\n      currentGenreArray = currentGenreArray.filter(item => item !== genreNum);\n      this.setState({\n        genreClasses: currentStyleArray,\n        currentSelectedGenres: currentGenreArray\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"registerApp\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"topContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"logoContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"firstPartLogo\",\n              children: \"Tudor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Flix\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"signUpLinkContainer\",\n          children: this.state.pageContent[this.state.pageContentState].topright\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.loginClass[this.state.loginClassState],\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"loginTitle\",\n          children: this.state.pageContent[this.state.pageContentState].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"sublogintitle\",\n          children: this.state.pageContent[this.state.pageContentState].subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.errorID[this.state.errorState],\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"errorTitle\",\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), this.state.isSigningUp ? /*#__PURE__*/_jsxDEV(SignUp, {\n          handleInput: this.handleFormInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 47\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          handleInput: this.handleFormInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 94\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: this.userSubmitInfo,\n          id: \"loginButtonContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"loginButton\",\n            src: ArrowSVG,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"surveyContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"surveyTitle\",\n          children: \"What Are Your Favourite Genres? (Select Up To 3)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.favouritesClass[this.state.favouritesClassState],\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleGenreClick(0, 18),\n            className: this.state.genreClasses[0],\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"genreImage\",\n              src: DramaSVG,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genreName\",\n              children: \"Drama\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleGenreClick(1, 28),\n            className: this.state.genreClasses[1],\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"genreImage\",\n              src: ActionSVG,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genreName\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleGenreClick(2, 12),\n            className: this.state.genreClasses[2],\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"genreImage\",\n              src: AdventureSVG,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genreName\",\n              children: \"Adventure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleGenreClick(3, 35),\n            className: this.state.genreClasses[3],\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"genreImage\",\n              src: ComedySVG,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genreName\",\n              children: \"Comedy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleGenreClick(4, 27),\n            className: this.state.genreClasses[4],\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"genreImage\",\n              src: HorrorSVG,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genreName\",\n              children: \"Horror\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleGenreClick(5, 878),\n            className: this.state.genreClasses[5],\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"genreImage\",\n              src: SciFiSVG,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genreName\",\n              children: \"Science Fiction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: this.userSubmitSurvey,\n          id: \"surveyButtonContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"loginButton\",\n            src: ArrowSVG,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"allrightsText\",\n        children: \"TudorFlix\\xAE 2021 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/willi/OneDrive/Documents/Projects/tudorflix/Client/src/Register.js"],"names":["React","Component","axios","Login","SignUp","Register","constructor","props","handleFormInput","event","key","userSubmitInfo","UserChangeSignType","type","document","getElementsByClassName","value","setState","isSigningUp","pageContentState","errorState","initializeSignUpSurvey","loginClassState","favouritesClassState","username","email","password","console","log","state","post","routes","signin","then","res","data","status","errorMessage","message","localStorage","setItem","JSON","stringify","user","window","location","replace","home","isUser","userSubmitSurvey","signup","currentSelectedGenres","errorID","pageContent","loginClass","favouritesClass","genreClasses","handleGenreClick","bind","componentDidMount","genreStyleClassesToAdd","x","push","index","genreNum","length","includes","currentStyleArray","currentGenreArray","filter","item","render","topright","title","subtitle","ArrowSVG","DramaSVG","ActionSVG","AdventureSVG","ComedySVG","HorrorSVG","SciFiSVG"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n//body structure css\r\nimport './App.css';\r\nimport './Register.css';\r\n\r\nimport Login from './Login';\r\nimport SignUp from './SignUp';\r\n\r\nimport ArrowSVG from './SVG/Arrow-Solid.svg';\r\nimport DramaSVG from './SVG/Drama-Solid.svg';\r\nimport AdventureSVG from './SVG/Adventure-Solid.svg';\r\nimport ComedySVG from './SVG/Comedy-Solid.svg';\r\nimport HorrorSVG from './SVG/Horror-Solid.svg';\r\nimport SciFiSVG from './SVG/SciFi-Solid.svg';\r\nimport ActionSVG from './SVG/Action-Solid.svg';\r\n\r\nclass Register extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            errorID: ['errorSubmissionContainer', 'errorSubmissionContainer show'],\r\n            errorState: 0,\r\n            errorMessage: '',\r\n            isSigningUp: false,\r\n            pageContent: [\r\n                        {'title': 'Log In', 'subtitle': 'Login To Your TudorFlix Account', 'topright': <p>Don't Have An Account? <span onClick={() => (this.UserChangeSignType('signup'))} id='createAccountLink'>Sign Up</span></p>},\r\n                {'title': 'Sign Up', 'subtitle': 'Create a TudorFlix Account', 'topright': <p>Already Have An Account? <span onClick={() => (this.UserChangeSignType('login'))} id='createAccountLink'>Log In</span></p>}\r\n            ],\r\n            pageContentState: 0,\r\n            loginClass: ['loginContainer', 'loginContainer loginContainerHide'],\r\n            loginClassState: 0,\r\n            favouritesClass: ['surveyFavouritesContainer', 'surveyFavouritesContainerShow surveyFavouritesContainer'],\r\n            favouritesClassState: 0,\r\n            genreClasses: [],\r\n            currentSelectedGenres: [],\r\n        }\r\n\r\n        this.handleGenreClick =  this.handleGenreClick.bind(this)\r\n    }\r\n\r\n    handleFormInput= (event) => {\r\n        if(event.key === 'Enter'){\r\n            this.userSubmitInfo();\r\n        }\r\n    }\r\n\r\n    UserChangeSignType = (type) =>{\r\n        document.getElementsByClassName('userInputBox')[0].value = '';\r\n        document.getElementsByClassName('userInputBox')[1].value = '';\r\n        if(type === 'signup'){\r\n            this.setState({isSigningUp: true, pageContentState: 1, errorState: 0});\r\n        }else if(type === 'login'){\r\n            this.setState({isSigningUp: false, pageContentState: 0, errorState: 0});\r\n        }\r\n    }\r\n\r\n    initializeSignUpSurvey = () => {\r\n        this.setState({loginClassState: 1, favouritesClassState: 1});\r\n    }\r\n\r\n    componentDidMount() {\r\n        var genreStyleClassesToAdd = []\r\n        for (var x = 0; x < 6; x++){\r\n            genreStyleClassesToAdd.push('genreContainer');\r\n        }\r\n        this.setState({genreClasses: genreStyleClassesToAdd});\r\n    }\r\n\r\n    userSubmitInfo = async () =>{ //LOG IN\r\n        var username = document.getElementsByClassName('userInputBox')[0].value;\r\n        var email = document.getElementsByClassName('userInputBox')[1].value;\r\n        var password = document.getElementsByClassName('userInputBox')[2].value;\r\n        console.log(username, email, password);\r\n        if(this.state.isSigningUp === false){\r\n            await axios.post(this.props.routes.signin, {'username': username, 'password': password})\r\n            .then(res => {\r\n                if(res.data.status === 'failure'){\r\n                    this.setState({ errorState: 1, errorMessage: 'Username or Password is Incorrect'})\r\n                }else if(res.data.message === 'user_successful'){\r\n                    localStorage.setItem('username', JSON.stringify(res.data.user));\r\n                    // console.log(JSON.parse((localStorage.getItem('username'))).genres);\r\n                    window.location.replace(this.props.routes.home)\r\n                }\r\n            })\r\n        }else{ //SIGN UP\r\n            \r\n            await axios.post(this.props.routes.isUser, {'username': username, 'password': password})\r\n            .then(res => {\r\n                if(res.data.message === 'user_already_exists'){\r\n                    this.setState({ errorState: 1, errorMessage: 'Username already exists'});\r\n                }else if(res.data.message === 'user_new'){\r\n                    this.setState({username: username, password: password});\r\n                    this.initializeSignUpSurvey();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    userSubmitSurvey = async () =>{// SUBMIT USER INFORMATION FOR SIGNINGUP\r\n        await axios.post(this.props.routes.signup, {'username': this.state.username, 'password': this.state.password, 'genres': this.state.currentSelectedGenres})\r\n        .then(res =>{\r\n            if(res.data.status === 'success'){\r\n                localStorage.setItem('username', JSON.stringify(res.data.user));\r\n                window.location.replace(this.props.routes.home)\r\n            }\r\n        })\r\n    }\r\n\r\n    handleGenreClick(index, genreNum){\r\n        if(this.state.currentSelectedGenres.length < 3 && !this.state.currentSelectedGenres.includes(genreNum)){\r\n            var currentStyleArray = this.state.genreClasses;\r\n            var currentGenreArray = this.state.currentSelectedGenres;\r\n            currentGenreArray.push(genreNum);\r\n            currentStyleArray[index] = 'genreContainer genreSelected';\r\n            this.setState({genreClasses: currentStyleArray, currentSelectedGenres: currentGenreArray});\r\n        }else if(this.state.currentSelectedGenres.includes(genreNum)){ //user selected the genre already\r\n            currentStyleArray = this.state.genreClasses;\r\n            currentStyleArray[index] = 'genreContainer';\r\n            currentGenreArray = this.state.currentSelectedGenres;\r\n            currentGenreArray = currentGenreArray.filter(item => item !== genreNum);\r\n            this.setState({genreClasses: currentStyleArray, currentSelectedGenres: currentGenreArray});\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div id='registerApp'>\r\n                <div id='topContainer'>\r\n                    <div id='logoContainer'>\r\n                        <p><span id='firstPartLogo'>Tudor</span><span>Flix</span></p>\r\n                    </div>\r\n                    <div id='signUpLinkContainer'>\r\n                        {/* <p>Don't have an account? <span onClick={this.UsergotoSignUp} id='createAccountLink'>Create Account</span></p> */}\r\n                        {this.state.pageContent[this.state.pageContentState].topright}\r\n                    </div>\r\n                </div>\r\n                <div className={this.state.loginClass[this.state.loginClassState]}>\r\n                    <p id='loginTitle'>{this.state.pageContent[this.state.pageContentState].title}</p>\r\n                    <p id='sublogintitle'>{this.state.pageContent[this.state.pageContentState].subtitle}</p>\r\n                    <div className={this.state.errorID[this.state.errorState]}>\r\n                        <p id='errorTitle'>Error</p>\r\n                        <p>{this.state.errorMessage}</p>\r\n                    </div>\r\n                    {this.state.isSigningUp ? <SignUp handleInput={this.handleFormInput}/> : <Login handleInput={this.handleFormInput}/>}\r\n                    <div onClick={this.userSubmitInfo} id='loginButtonContainer'>\r\n                        <img className='loginButton' src={ArrowSVG} alt=''></img>\r\n                    </div>\r\n                </div>\r\n                <div id='surveyContainer'>\r\n                    <p id='surveyTitle'>What Are Your Favourite Genres? (Select Up To 3)</p>\r\n                    <div className={this.state.favouritesClass[this.state.favouritesClassState]}>\r\n                        <div onClick={() => this.handleGenreClick(0, 18)} className={this.state.genreClasses[0]}>\r\n                            <img className='genreImage' src={DramaSVG} alt=''></img>\r\n                            <p className='genreName'>Drama</p>\r\n                        </div>\r\n                        <div onClick={() => this.handleGenreClick(1, 28)} className={this.state.genreClasses[1]}>\r\n                            <img className='genreImage' src={ActionSVG} alt=''></img>\r\n                            <p className='genreName'>Action</p>\r\n                        </div>\r\n                        <div onClick={() => this.handleGenreClick(2, 12)} className={this.state.genreClasses[2]}>\r\n                            <img className='genreImage' src={AdventureSVG} alt=''></img>\r\n                            <p className='genreName'>Adventure</p>\r\n                        </div>\r\n                        <div onClick={() => this.handleGenreClick(3, 35)} className={this.state.genreClasses[3]}>\r\n                            <img className='genreImage' src={ComedySVG} alt=''></img>\r\n                            <p className='genreName'>Comedy</p>\r\n                        </div>\r\n                        <div onClick={() => this.handleGenreClick(4, 27)} className={this.state.genreClasses[4]}>\r\n                            <img className='genreImage' src={HorrorSVG} alt=''></img>\r\n                            <p className='genreName'>Horror</p>\r\n                        </div>\r\n                        <div onClick={() => this.handleGenreClick(5, 878)} className={this.state.genreClasses[5]}>\r\n                            <img className='genreImage' src={SciFiSVG} alt=''></img>\r\n                            <p className='genreName'>Science Fiction</p>\r\n                        </div>\r\n                    </div>\r\n                    <div onClick={this.userSubmitSurvey} id='surveyButtonContainer'>\r\n                        <img className='loginButton' src={ArrowSVG} alt=''></img>\r\n                    </div>\r\n                </div>\r\n                \r\n                <p id='allrightsText'>TudorFlix&#174; 2021 </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}